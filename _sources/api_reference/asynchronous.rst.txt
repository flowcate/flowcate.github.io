Latency and Asynchronous Behaviour
==================================

The DeepHubÂ® is a single process application that is optimized for high throughput and low memory footprint thus being capable of processing huge amounts of requests per second
even on low-end hardware like a Rasperry PI or a NUC PC on the edge.

It provides several I/O APIs that are typically utilized simultaneously by 3rd party services, providing location data towards the DeepHub to be processed on one hand and 
events being generated by the DeepHub and published to potential subscribers on the other hand.

It is an event bus at the heart of the DeepHub that makes the processing of the many I/O channels possible and that is responsible for the low overall latency of a single instance installation.
Due to this architecture, the DeepHub acts asynchronously in the sense that delivered input data, e.g. via the REST API, does not synchronously deliver e.g. events via the output WebSocket API.
This is e.g. noticable in case a location update is provided as input but a configured mobile zone (see :ref:`Mobile Zone Extension <api-reference-mobilezones>` below) is updated only within some milliseconds.

Future versions of the DeepHub will support the deployment of several hubs to work together as a system for redundancy and availability reasons. In that configuration, it is again the event bus of the several instances that makes collaboration
possible and allows for plugging them together via an external message queue. The overall system latency is then of course influenced by the network latency as well as the latency of the
message queueing application itself.


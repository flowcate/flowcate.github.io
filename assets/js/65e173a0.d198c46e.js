"use strict";(self.webpackChunkdeephub_doc=self.webpackChunkdeephub_doc||[]).push([[3713],{69333:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var a=n(85893),s=n(11151),o=n(70387);const i={sidebar_position:3,sidebar_label:"Modes of Operation",title:"Modes of Operation"},r=void 0,d={id:"deephub/OperationModes",title:"Modes of Operation",description:"Latency and Asynchronous Behaviour",source:"@site/versioned_docs/version-DeepHub 2023 R2 - 2.4.2/deephub/OperationModes.mdx",sourceDirName:"deephub",slug:"/deephub/OperationModes",permalink:"/docs/DeepHub 2023 R2 - 2.4.2/deephub/OperationModes",draft:!1,unlisted:!1,tags:[],version:"DeepHub 2023 R2 - 2.4.2",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Modes of Operation",title:"Modes of Operation"},sidebar:"tutorialSidebar",previous:{title:"Security & Authorization",permalink:"/docs/DeepHub 2023 R2 - 2.4.2/deephub/SecurityAuthorization"},next:{title:"REST API",permalink:"/docs/DeepHub 2023 R2 - 2.4.2/deephub/api"}},l={},c=[{value:"Latency and Asynchronous Behaviour",id:"latency-and-asynchronous-behaviour",level:2},{value:"Data Consistency",id:"data-consistency",level:2},{value:"Unique databases",id:"unique-databases",level:2}];function u(e){const t={a:"a",br:"br",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(t.h2,{id:"latency-and-asynchronous-behaviour",children:"Latency and Asynchronous Behaviour"}),(0,a.jsx)(t.p,{children:"The DeepHub\xae is a single process application that is optimized for high throughput and low memory usage. It is capable of processing large amounts of requests per second,\neven on low-end hardware, such as a Raspberry PI or a NUC PC on the edge."}),(0,a.jsx)(t.p,{children:"It provides several I/O APIs that are typically utilized simultaneously by 3rd party services - providing location data to the DeepHub to be processed on one hand, and\nevents being generated by the DeepHub and published to potential subscribers on the other hand."}),(0,a.jsxs)(t.p,{children:["At the heart of the DeepHub lies an event bus that processes the many I/O channels and is responsible for the low overall latency of a single instance installation.\nDue to this architecture, the DeepHub acts asynchronously in the sense that delivered input data (e.g. via the REST API) is not synchronously delivered (e.g. through events via the output WebSocket API).\nThis is noticeable in certain cases. For example, if a location update is provided as input but a configured mobile zone (see ",(0,a.jsx)(t.strong,{children:(0,a.jsx)(t.a,{href:"/docs/DeepHub%202023%20R2%20-%202.4.2/deephub/mobilezones",children:"Mobile Zone Extension"})}),") is updated within milliseconds."]}),(0,a.jsx)(t.p,{children:"Future versions of the DeepHub will support the deployment of several hubs working together as a system for redundancy and availability. In that configuration, it is the event bus of the hub instances that makes collaboration\npossible and allows them to be plugged together via an external message queue. The overall system latency would then be influenced by the network latency as well as the latency of the\nmessage queuing application itself."})]}),"\n",(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(t.h2,{id:"data-consistency",children:"Data Consistency"}),(0,a.jsxs)(t.p,{children:["The configuration parameter ",(0,a.jsx)(t.a,{href:"/docs/DeepHub%202023%20R2%20-%202.4.2/deephub/ServerConfiguration#db_fast_writes",children:"db_fast_writes"})," fundamentally changes how errors from the database are handled by the DeepHub.\nTherefore, usage of this parameter is not only a question of performance, but also of data consistency and availability."]}),(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"db_fast_writes = false"}),(0,a.jsx)(t.br,{}),"\n","The DeepHub will wait for every database operation to successfully finish.\nIf the connection to the database is lost, e.g. due to a network issue, the DeepHub will report this error back to the callee and will not process the provided data.\nThis guarantees that all data, which was accepted by the DeepHub, was successfully written to the database.\nIf the application heavily relies upon the ",(0,a.jsx)(t.strong,{children:"completeness of the database"}),", this configuration parameter must be set to false."]}),"\n"]}),"\n",(0,a.jsxs)(t.li,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"db_fast_writes = true"}),(0,a.jsx)(t.br,{}),"\n","The DeepHub uses a memory based queue to optimize its write performance and all data are accepted and processed.\nWhenever the database encounters an issue, the DeepHub will continue accepting data and update the database accordingly, once the database recovers.\nWhile this guarantees that the DeepHub continues processing, it can lead to data loss, if the database never recovers.\nIf the application heavily relies upon ",(0,a.jsx)(t.strong,{children:"guaranteed event generation"}),", this configuration parameter must be set to true."]}),"\n"]}),"\n"]})]}),"\n",(0,a.jsxs)(o.Z,{children:[(0,a.jsx)(t.h2,{id:"unique-databases",children:"Unique databases"}),(0,a.jsx)(t.p,{children:"Currently, the DeepHub requires to have exclusive access to the databases it uses for data persistence.\nNo two DeepHub instances should run while using the same database.\nEach database contains an id to uniquely identify this database, which allows to detect such a misconfiguration (Though it does not prevent it)."})]})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},70387:(e,t,n)=>{n.d(t,{Z:()=>s});n(67294);var a=n(85893);function s(e){let{children:t}=e;return(0,a.jsx)("section",{className:"section markdown",children:t})}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>i});var a=n(67294);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);